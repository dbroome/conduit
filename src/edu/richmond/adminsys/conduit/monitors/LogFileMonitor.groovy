package edu.richmond.adminsys.conduit.monitors

import edu.richmond.adminsys.conduit.ICMonitor
import edu.richmond.adminsys.conduit.ICFitting
import groovy.util.slurpersupport.GPathResult
import java.text.SimpleDateFormat
import edu.richmond.adminsys.conduit.Utilities

/**
 * The LogFileMonitor class publishes events generated by sources or sinks during a transformation to a log file.
 * 
 * @author dbroome
 *
 */

class LogFileMonitor implements ICMonitor {

    SimpleDateFormat dateFormat
    File outputFile
    BufferedWriter logFileWriter

    @Override
    void logEvent(ICFitting generator, Map event) {
        if (event['message'] != null) {
            String when = (dateFormat != null)? dateFormat.format(new Date()) : new Date().toString()
            logFileWriter.writeLine("${when} - ${event['message']}")
            logFileWriter.flush()
        }
    }

    @Override
    void setUp(GPathResult config) {
        Utilities.checkRequiredConfigItems(config, ['outputFile'])
        if (config.dateFormat != null) {
            dateFormat = new SimpleDateFormat(config.dateFormat.text())
        }
        outputFile = new File(config.outputFile.text())
        logFileWriter = new BufferedWriter(new FileWriter(outputFile, true))
    }

    @Override
    void tearDown() {
        logFileWriter.flush()
        logFileWriter.close()
    }
}
